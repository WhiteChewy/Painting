Манипулятору поступило задание по раскрашиванию предмета странной формы, маску этой формы можно получить у функции
get_img (возвращает np.array(shape=(400*400))
где единицами обозначены точки содержащие предмет).

Для того чтобы закрасить область и не залить краской все вокруг нужно пройтись
рукой по всем точкам предмета (точки с единицами), при этом над точками вне маски нужно выключать подачу краски.
Необходимо дописать функцию get_route чтобы она возвращала последовательность точек которые рука должна посетить и
статус руки во время движения в эту точку (1- едет и красит, 2- едет и не красит). Так как поступающие маски бывают
очень разной формы и могут состоять из отдельных кусков, окрашивать все построчно слева направо очень долго.

Нужно придумать и реализовать алгоритм генерации маршрута руки по маске который бы выполнял проход быстрее предложенного
в качестве примера и не имел скрытых проблем (предложенный алгоритм проведет горизонтальную черту через всю область
если строка заканчивается единицей и следующая начинается с единицы).


старая get_route()

# Очень плохая функция генерирующая маршрут
def get_route(im):
    route = []
    # Точки обходятся сверху вниз, слева направо
    for x in range(im.shape[0]):
        for y in range(im.shape[1]):
            # Если в точке есть предмет (маска == 1)- красит
            if im[x,y] == 1:
                status = 1
            else:
                status = 0
            # Координаты и статус записываются в маршрут
            route.append(
                {
                    'x': x,
                    'y': y,
                    'status': status
                }
            )
    return route